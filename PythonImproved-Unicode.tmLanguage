<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>author</key>
	<string>Matt Morrison @MattDMo mattdmo@pigimal.com</string>
	<key>bundleUUID</key>
	<string>0F24FCF1-6543-4CC6-8B33-2EAED401FE3A</string>
	<key>comment</key>
	<string>To make PythonImproved your default Python syntax, open a .py file and select View|Syntax|Open all with current extension as...|PythonImproved.</string>
	<key>fileTypes</key>
	<array>
		<string>py</string>
		<string>py3</string>
		<string>rpy</string>
		<string>pyw</string>
		<string>cpy</string>
		<string>SConstruct</string>
		<string>Sconstruct</string>
		<string>sconstruct</string>
		<string>SConscript</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/.*\bpython[0-9.-]*\b</string>
	<key>foldingStartMarker</key>
	<string>^\s*(((?:async\s+)?def)|class)\s+([.\p{Alnum}_ &lt;]+)\s*(\((.*)\))?\s*:|\{\s*$|\(\s*$|\[\s*$|^\s*"""(?=.)(?!.*""")</string>
	<key>foldingStopMarker</key>
	<string>^\s*$|^\s*\}|^\s*\]|^\s*\)|^\s*"""\s*$</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>PythonImproved-Unicode</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.ipython.cell-number.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(^In \[(\d+)\]\:)</string>
			<key>name</key>
			<string>support.ipython.in.python</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.ipython.cell-number.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(^Out\[(\d+)\]\:)</string>
			<key>name</key>
			<string>support.ipython.out.python</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>comment.line.note.notation.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#)+\s*(BUG|FIXME|TODO|XXX).*$\n?</string>
			<key>name</key>
			<string>comment.line.note.python</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#)+.*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Match identifiers in ALL_CAPS as constants, except when followed by . or (.</string>
			<key>match</key>
			<string>\b([\p{Upper}_][\p{Upper}\p{Digit}_]*)\b(?![\.\(])</string>
			<key>name</key>
			<string>constant.other.allcaps.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0x\h+)L)</string>
			<key>name</key>
			<string>constant.numeric.integer.long.hexadecimal.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0x\h+))</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0b[01]+)L)</string>
			<key>name</key>
			<string>constant.numeric.integer.long.binary.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0b[01]+))</string>
			<key>name</key>
			<string>constant.numeric.integer.binary.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0[o]?[0-7]+)L)</string>
			<key>name</key>
			<string>constant.numeric.integer.long.octal.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0[o]?[0-7]+))</string>
			<key>name</key>
			<string>constant.numeric.integer.octal.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Not quite perfect...</string>
			<key>match</key>
			<string>\b(?i:(((\d+(\.(?=[^\p{Alpha}_])\d*)?|(?&lt;=[^\p{Alnum}_])\.\d+)(e[\-\+]?\d+)?))J)</string>
			<key>name</key>
			<string>constant.numeric.complex.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Ummm... why do we have three of these? This is one...</string>
			<key>match</key>
			<string>\b(?i:(\d+\.\d*(e[\-\+]?\d+)?))(?=[^\p{Alpha}_])</string>
			<key>name</key>
			<string>constant.numeric.float.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>This is two...</string>
			<key>match</key>
			<string>(?&lt;=[^\p{Alnum}_])(?i:(\.\d+(e[\-\+]?\d+)?))</string>
			<key>name</key>
			<string>constant.numeric.float.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>And this is three...</string>
			<key>match</key>
			<string>\b(?i:(\d+e[\-\+]?\d+))</string>
			<key>name</key>
			<string>constant.numeric.float.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:([1-9]+[0-9]*|0)L)</string>
			<key>name</key>
			<string>constant.numeric.integer.long.decimal.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([1-9]+[0-9]*|0)</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(None|True|False|Ellipsis|NotImplemented)\b</string>
			<key>name</key>
			<string>constant.language.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(global|nonlocal)\b</string>
			<key>name</key>
			<string>storage.modifier.declaration.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?:(import|from|as))\b</string>
			<key>name</key>
			<string>keyword.control.import.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keyword operators that evaluate to True or False</string>
			<key>match</key>
			<string>\b(and|in|is|not|or)\b</string>
			<key>name</key>
			<string>keyword.operator.logical.python</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keywords that don't fit into other groups.</string>
			<key>match</key>
			<string>\b(assert|del)\b</string>
			<key>name</key>
			<string>keyword.other.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;&gt;</string>
			<key>name</key>
			<string>invalid.deprecated.operator.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)(apply|buffer|coerce|intern)\s*(?=\()</string>
			<key>name</key>
			<string>invalid.deprecated.function.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;\=|&gt;\=|\=\=|&lt;|&gt;|\!\=</string>
			<key>name</key>
			<string>keyword.operator.comparison.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+\=|-\=|\*\=|/\=|//\=|%\=|&amp;\=|\|\=|\^\=|&gt;&gt;\=|&lt;&lt;\=|\*\*\=|@\=</string>
			<key>name</key>
			<string>keyword.operator.assignment.augmented.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+|\-|\*|\*\*|/|//|%|&lt;&lt;|&gt;&gt;|&amp;|\||\^|~|(?!^)@</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.python</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\=</string>
			<key>name</key>
			<string>keyword.operator.assignment.python</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\s*(class)\s+(?=[\p{Alpha}_][\p{Alnum}_]*\s*\:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.python</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>entity.name.type.class.python</string>
			<key>end</key>
			<string>\s*(:)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.begin.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.old-style.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity_name_class</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\s*(class)\s+(?=[\p{Alpha}_][\p{Alnum}_]*\s*\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))\s*(?:(\:)|(.*$\n?))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.inheritance.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.begin.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-section-begin.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[\p{Alpha}_][\p{Alnum}_]*)</string>
					<key>contentName</key>
					<string>entity.name.type.class.python</string>
					<key>end</key>
					<string>(?![\p{Alnum}_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_class</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.inheritance.begin.python</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.class.inheritance.python</string>
					<key>end</key>
					<string>(?=\)|:)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\(|,)\s*</string>
							<key>contentName</key>
							<string>entity.other.inherited-class.python</string>
							<key>end</key>
							<string>\s*(?:(,)|(?=\)))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.python</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\s*(class)\s+(?=[\p{Alpha}_][\p{Alnum}_])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\()|\s*($\n?|#.*$\n?)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.inheritance.begin.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-inheritance.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.type.class.python</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\s*((?:async\s+)?def)\s+(?=[\p{Alpha}_][\p{Alnum}_]*\s*\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\:)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.function.begin.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[\p{Alpha}_][\p{Alnum}_]*)</string>
					<key>contentName</key>
					<string>entity.name.function.python</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.python</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.parameters.python</string>
					<key>end</key>
					<string>(?=\)\s*(?:\:|-\&gt;))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#annotated_arguments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.language.python</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.python</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.parameters.python</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(?:(self|cls)|([\p{Alpha}_][\p{Alnum}_]*))\s*(?:(,)|(?=[\n\)]))</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\))\s*(\-&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.annotation.result.python</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\:)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\s*((?:async\s+)?def)\s+(?=[\p{Alpha}_][\p{Alnum}_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\()|\s*($\n?|#.*$\n?)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-parameters.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[\p{Alpha}_][\p{Alnum}_]*)</string>
					<key>contentName</key>
					<string>entity.name.function.python</string>
					<key>end</key>
					<string>(?![\p{Alnum}_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(((?:async\s+)?def)|lambda)\b</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Keywords that delimit flow blocks or alter flow from within a
block.

This block should be matched *after* meta.function.python to
let 'async def' be matched *first*.
</string>
			<key>match</key>
			<string>(?x) \b(
  async | await | break | continue | elif | else | except | finally | for |
  if | pass | raise | return | try | while | with |
  (yield(?:\s+from)?)
)\b
</string>
			<key>name</key>
			<string>keyword.control.flow.python</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(lambda)(?=\s+|:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.inline.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\:)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.function.begin.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-section-begin.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.inline.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\s+</string>
					<key>contentName</key>
					<string>meta.function.inline.parameters.python</string>
					<key>end</key>
					<string>(?=\:)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.python</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.parameters.python</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b([\p{Alpha}_][\p{Alnum}_]*)\s*(?:(,)|(?=[\n\)\:]))</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(?=@\s*[\p{Alpha}_][\p{Alnum}_]*(?:\.[\p{Alpha}_][\p{Alnum}_]*)*\s*\()</string>
			<key>comment</key>
			<string>a decorator may be a function call which returns a decorator.</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.decorator.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=(@)\s*[\p{Alpha}_][\p{Alnum}_]*(?:\.[\p{Alpha}_][\p{Alnum}_]*)*\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.decorator.python</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.function.decorator.python</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.python</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.decorator.arguments.python</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(?=@\s*[\p{Alpha}_][\p{Alnum}_]*(?:\.[\p{Alpha}_][\p{Alnum}_]*)*)</string>
			<key>contentName</key>
			<string>entity.name.function.decorator.python</string>
			<key>end</key>
			<string>(?=\s|$\n?|#)</string>
			<key>name</key>
			<string>meta.function.decorator.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=(@)\s*[\p{Alpha}_][\p{Alnum}_]*(\.[\p{Alpha}_][\p{Alnum}_]*)*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.decorator.python</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s|$\n?|#)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\)|\])\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.begin.python</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.function-call.arguments.python</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#keyword_arguments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_functions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_exceptions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#docstrings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#magic_function_names</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#magic_variable_names</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#language_variables</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#generic_object_names</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?:\.)?([\p{Alpha}_][\p{Alnum}_]*)\s*(?=\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.function-call.generic.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[\p{Alpha}_][\p{Alnum}_]*(?:\.[\p{Alpha}_][\p{Alnum}_]*)*\s*\()</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.python</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function-call.arguments.python</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?=[\p{Alpha}_][\p{Alnum}_]*(?:\.[\p{Alpha}_][\p{Alnum}_]*)*\s*\[)</string>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.item-access.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[\p{Alpha}_][\p{Alnum}_]*(?:\.[\p{Alpha}_][\p{Alnum}_]*)*\s*\[)</string>
					<key>end</key>
					<string>(?=\s*\[)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.python</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.item-access.arguments.python</string>
					<key>end</key>
					<string>(?=\])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\)|\])\s*(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.begin.python</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.item-access.arguments.python</string>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.item-access.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(class)\b</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_continuation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#language_variables</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_quoted_single</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_quoted_double</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#dotted_name</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>end</key>
			<string>(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-list.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\[)(\s*(\]))\b</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.list.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\[|\,)\s*(?![\],])</string>
					<key>contentName</key>
					<string>meta.structure.list.item.python</string>
					<key>end</key>
					<string>\s*(?:(,)|(?=\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.list.python</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.begin.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-tuple.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.end.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(\()(\s*(\)))\b</string>
			<key>name</key>
			<string>meta.structure.tuple.python</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.begin.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-dictionary.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.end.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\{)(\s*(\}))</string>
			<key>name</key>
			<string>meta.structure.dictionary.python</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.begin.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.end.python</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.dictionary.python</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\{|\,|^)\s*(?![\},])</string>
					<key>contentName</key>
					<string>meta.structure.dictionary.key.python</string>
					<key>end</key>
					<string>\s*(?:(?=\})|(\:))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.valuepair.dictionary.python</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\:|^)\s*</string>
					<key>contentName</key>
					<string>meta.structure.dictionary.value.python</string>
					<key>end</key>
					<string>\s*(?:(?=\})|(,))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.dictionary.python</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>annotated_arguments</key>
		<dict>
			<key>begin</key>
			<string>\b([\p{Alpha}_][\p{Alnum}_]*)\s*(:)|(?=\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.annotation.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(?:(,)|(?=$\n?|[\)\:]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.python</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#annotated_group</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator.assignment.python</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>annotated_group</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters-group.begin.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters-group.end.python</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b([\p{Alpha}_][\p{Alnum}_]*)\s*(:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.annotation.python</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*(?:(,)|(?=$\n?|\)))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.parameters.python</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b([\p{Alpha}_][\p{Alnum}_]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.python</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*(?:(,)|(?=$\n?|\)))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.parameters.python</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<key>builtin_exceptions</key>
		<dict>
			<key>match</key>
			<string>(?x) \b(
  (
    Arithmetic | Assertion | Attribute | Buffer | BlockingIO |
    BrokenPipe | ChildProcess |
    (Connection (Aborted | Refused | Reset)?) |
    EOF | Environment | FileExists | FileNotFound |
    FloatingPoint | IO | Import | Indentation | Index | Interrupted |
    IsADirectory | NotADirectory | Permission | ProcessLookup |
    Timeout |
    Key | Lookup | Memory | Name | NotImplemented | OS | Overflow |
    Reference | Runtime | Recursion | Standard | Syntax | System |
    Tab | Type | UnboundLocal | Unicode(Encode|Decode|Translate)? |
    Value | VMS | Windows | ZeroDivision
  )? Error
|
  ((Pending)?Deprecation | Runtime | Syntax | User | Future | Import |
    Unicode | Bytes | Resource
  )? Warning
|
  SystemExit | Stop(Async)?Iteration | NotImplemented |
  KeyboardInterrupt |
  GeneratorExit | Exception
)\b
</string>
			<key>name</key>
			<string>support.type.exception.python</string>
		</dict>
		<key>builtin_functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)(__import__|abs|all|any|ascii|basestring|bin|bool|bytearray|bytes|callable|chr|classmethod|cmp|compile|complex|delattr|dict|dir|divmod|enumerate|eval|exec|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|print|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\s*(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.builtin.python</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?=[\p{Alpha}_][\p{Alnum}_]*(?:\.[\p{Alpha}_][\p{Alnum}_]*)*\s*\()</string>
							<key>end</key>
							<string>(?=\s*\()</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#dotted_name</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.arguments.begin.python</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.function-call.arguments.python</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#keyword_arguments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>builtin_types</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\b(ascii|basestring|bin|bool|buffer|bytearray|bytes|classmethod|complex|dict|file|float|frozenset|hex|int|list|long|object|oct|property|reversed|set|slice|staticmethod|str|super|tuple|type|unicode|xrange)\b</string>
			<key>name</key>
			<string>support.type.python</string>
		</dict>
		<key>character-class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[wWsSdDhH]|\.</string>
					<key>name</key>
					<string>constant.character.character-class.regex.python</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.backslash.regex.python</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[)(\^)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.regex.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.negation.regex.python</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.regex.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>constant.other.character-class.set.regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#character-class</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.character.escape.backslash.regex.python</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>constant.character.escape.backslash.regex.python</string>
								</dict>
							</dict>
							<key>match</key>
							<string>((\\.)|.)\-((\\.)|[^\]])</string>
							<key>name</key>
							<string>constant.other.character-class.range.regex.python</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>comment.line.note.notation.python</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#)\s*(BUG|FIXME|TODO|XXX).*$\n?</string>
					<key>name</key>
					<string>comment.line.note.python</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.python</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#).*$\n?</string>
					<key>name</key>
					<string>comment.line.number-sign.python</string>
				</dict>
			</array>
		</dict>
		<key>constant_placeholder</key>
		<dict>
			<key>match</key>
			<string>(?i:%(\([\p{Lower}_]+\))?#?0?\-?[ ]?\+?([0-9]*|\*)(\.([0-9]*|\*))?[hL]?[\p{Lower}%])</string>
			<key>name</key>
			<string>constant.other.placeholder.python</string>
		</dict>
		<key>docstrings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(?=[uU]?[rR]?""")</string>
					<key>end</key>
					<string>(?&lt;=""")</string>
					<key>name</key>
					<string>comment.block.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_quoted_double</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(?=[uU]?[rR]?''')</string>
					<key>end</key>
					<string>(?&lt;=''')</string>
					<key>name</key>
					<string>comment.block.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_quoted_single</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>dotted_name</key>
		<dict>
			<key>begin</key>
			<string>(?=[\p{Alpha}_][\p{Alnum}_]*(?:\.[\p{Alpha}_][\p{Alnum}_]*)*)</string>
			<key>end</key>
			<string>(?![\p{Alnum}_\.])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\.)(?=[\p{Alpha}_][\p{Alnum}_]*)</string>
					<key>end</key>
					<string>(?![\p{Alnum}_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#magic_function_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#magic_variable_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegal_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic_names</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)(?=[\p{Alpha}_][\p{Alnum}_]*)</string>
					<key>end</key>
					<string>(?![\p{Alnum}_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin_functions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_exceptions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegal_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#magic_function_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#magic_variable_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#language_variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic_names</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>entity_name_class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#illegal_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>entity_name_function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#magic_function_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#illegal_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>escaped_char</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.hex.python</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.linefeed.python</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.return.python</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.tab.python</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.vertical-tab.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.octal.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.newline.python</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backlash.python</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.double-quote.python</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.single-quote.python</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.bell.python</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backspace.python</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.formfeed.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\x[\h]{2})|(\\[0-7]{3})|(\\\n)|(\\\\)|(\\\")|(\\')|(\\a)|(\\b)|(\\f)|(\\n)|(\\r)|(\\t)|(\\v)</string>
		</dict>
		<key>escaped_unicode_char</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.16-bit-hex.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.32-bit-hex.python</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.name.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\U[\h]{8})|(\\u[\h]{4})|(\\N\{[a-zA-Z0-9\, ]+\})</string>
		</dict>
		<key>function_name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#magic_function_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#magic_variable_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_exceptions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>generic_names</key>
		<dict>
			<key>match</key>
			<string>[\p{Alpha}_][\p{Alnum}_]*</string>
		</dict>
		<key>generic_object_names</key>
		<dict>
			<key>match</key>
			<string>(\.\b([\p{Alpha}_][\p{Alnum}_]*)\b(?!\(|\[)|\b([\p{Alpha}_][\p{Alnum}_]*)\b\.)</string>
		</dict>
		<key>illegal_names</key>
		<dict>
			<key>match</key>
			<string>\b(and|as|assert|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b</string>
			<key>name</key>
			<string>invalid.illegal.name.python</string>
		</dict>
		<key>keyword_arguments</key>
		<dict>
			<key>begin</key>
			<string>\b([\p{Alpha}_][\p{Alnum}_]*)\s*(=)(?!=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.keyword.python</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.python</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(?:(,)|(?=$\n?|[\)\:]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.python</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>language_variables</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\b(self|cls)\b</string>
			<key>name</key>
			<string>variable.language.python</string>
		</dict>
		<key>line_continuation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.continuation.line.python</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\)(.*)$\n?</string>
		</dict>
		<key>magic_function_names</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.magic.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>these methods have magic interpretation by python and are generally called indirectly through syntactic constructs</string>
			<key>match</key>
			<string>(\.)?\b(__(?:abs|add|and|bool|call|ceil|cmp|complex|contains|copy|deepcopy|del|delattr|delete|delitem|delslice|dir|div|divmod|enter|eq|exit|float|floor|floordiv|format|ge|get|getattr|getattribute|getinitargs|getitem|getnewargs|getslice|getstate|gt|hash|hex|iadd|iand|idiv|ifloordiv|ilshift|imod|imul|index|init|instancecheck|int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|long|lshift|lt|missing|mod|mul|ne|neg|new|nonzero|oct|or|pos|pow|radd|rand|rdiv|rdivmod|reduce|reduce_ex|repr|reversed|rfloordiv|rlshift|rmod|rmul|ror|round|rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|setslice|setstate|sizeof|str|sub|subclasscheck|truediv|trunc|unicode|xor)__)\b</string>
		</dict>
		<key>magic_variable_names</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.variable.magic.python</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>magic variables which a class/module may have.</string>
			<key>match</key>
			<string>(\.)?\b(__(?:all|bases|class|debug|dict|doc|file|members|metaclass|methods|module|mro|name|slots|subclasses|version|weakref)__)\b</string>
		</dict>
		<key>regular_expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp.python</string>
				</dict>
			</array>
		</dict>
		<key>string_quoted_double</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([uU][rR])(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode-raw string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.unicode-raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([bB][rR])(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted bytes-raw string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.bytes-raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([rR])(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU])(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted unicode string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.unicode.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([bB])(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted bytes string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.bytes.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU][rR])(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double-quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.unicode-raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([bB][rR])(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double-quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.bytes-raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([rR])(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double-quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU])(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted unicode string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.unicode.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([bB])(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted bytes string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.bytes.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.python</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string_quoted_single</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.python</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!')(')(('))(?!')</string>
					<key>name</key>
					<string>string.quoted.single.single-line.python</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU][rR])(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode-raw string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.unicode-raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([bB][rR])(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted bytes-raw string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.bytes-raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([rR])(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU])(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.unicode.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([bB])(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted bytes string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.bytes.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU][rR])(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode-raw string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.unicode-raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([bB][rR])(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted bytes-raw string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.bytes-raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([rR])(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted raw string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.raw-regex.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU])(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.unicode.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([bB])(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted bytes string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.bytes.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.python</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.python</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.python</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_quoted_double</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_quoted_single</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.python</string>
	<key>uuid</key>
	<string>74FE3C79-C1DD-41A7-99C9-41CE48307997</string>
</dict>
</plist>
